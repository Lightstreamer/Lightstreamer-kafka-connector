	/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'eclipse'
    // id 'com.github.sherter.google-java-format' version '0.9'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
      url "https://packages.confluent.io/maven"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation group: 'com.lightstreamer', name: 'ls-adapter-inprocess', version: '8.0.0'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    // implementation 'ch.qos.logback:logback-classic:1.3.11'
    // implementation 'ch.qos.logback:logback-core:1.3.11'
    // implementation 'org.slf4j:slf4j-simple:2.0.9'
    // implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    implementation 'org.slf4j:slf4j-reload4j:2.0.9'
    implementation 'ch.qos.reload4j:reload4j:1.2.25'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation group:'org.apache.kafka', name:'kafka-clients', version:'3.5.0'
    implementation group:'io.confluent', name: 'kafka-avro-serializer', version:'7.0.1'
    implementation group:'io.confluent', name: 'kafka-json-serializer', version:'7.0.1'
}

// googleJavaFormat {
//   toolVersion = '1.17.0'
// }

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task deploy(type: Copy) {
  dependsOn 'cleanDeploy'

  into "deploy"
  // into "/home/gianluca/Lightstreamer/adapters/kafka-connector"
  
  from (jar) {
    into "lib"
  }
  
  from (configurations.runtimeClasspath) {
    into "lib"
    exclude "ls-adapter-inprocess*"
    exclude "jsr305*"
  }
  
  from ("src/adapters")
}

task cleanDeploy(type: Delete) {
  delete "deploy"
} 
