plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation group: 'info.picocli', name:'picocli', version:'4.7.5'

    implementation group: 'org.slf4j', name: 'slf4j-reload4j', 'version': '2.0.10'
    implementation group: 'org.apache.kafka', name:'kafka-clients', version:'7.7.0-ccs'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version:'7.7.0'
    implementation group: 'io.confluent', name: 'kafka-json-serializer', version:'7.7.0'
    implementation group: 'io.confluent', name: 'kafka-json-schema-serializer', version:'7.7.0'
}

ext {
    appendix = 'all'
}

group = 'com.lightstreamer.kafka'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Main-Class': "com.lightstreamer.kafka.examples.quick_start.producer.Producer"
    }
    archiveAppendix = appendix
    archiveVersion = ''

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/lightstreamer/Lightstreamer-kafka-connector")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId project.name + '-' + appendix
            version = version
            artifact jar
        }
    }
}
