---
name: quickstart-kafka-connect
services:
  kafka-connect:
    container_name: kafka-connect
    image: lightstreamer-kafka-connect-lighstreamer-${version}
    configs:
      - source: connect-standalone.properties
        target: /config/connect-standalone.properties
      - source: connector.properties
        target: /config/connector.properties        
    command:
      - /opt/kafka/bin/connect-standalone.sh
      - /config/connect-standalone.properties
      - /config/connector.properties
    depends_on:
      - broker
    ports:
      - 8080:8080
    # volumes:
    #   - ./config
    #   - ./web:/lightstreamer/pages/QuickStart
    #   - ./log4j.properties:/lightstreamer/adapters/lightstreamer-kafka-connector-${version}/log4j.properties

  producer:
    container_name: producer
    depends_on:
      - broker
    build:
      context: ../quickstart-producer
      args:
        VERSION: ${version}
    command: ["--bootstrap-servers", "broker:29092", "--topic", "stocks"]

  broker:
    image: apache/kafka
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "8082:8082"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"

configs:
  connect-standalone.properties:
    content: |
      # These are defaults. This file just demonstrates how to override some settings.
      bootstrap.servers=broker:29092

      # The converters specify the format of data in Kafka and how to translate it into Connect data. Every Connect user will
      # need to configure these based on the format they want their data in when loaded from or stored into Kafka
      key.converter=org.apache.kafka.connect.json.JsonConverter
      value.converter=org.apache.kafka.connect.json.JsonConverter
      # Converter-specific settings can be passed in by prefixing the Converter's setting with the converter we want to apply
      # it to
      key.converter.schemas.enable=true
      value.converter.schemas.enable=true

      offset.storage.file.filename=/tmp/connect.offsets
      # Flush much faster than normal, which is useful for testing/debugging
      offset.flush.interval.ms=10000

      # Set to a list of filesystem paths separated by commas (,) to enable class loading isolation for plugins
      # (connectors, converters, transformations). The list should consist of top level directories that include
      # any combination of:
      # a) directories immediately containing jars with plugins and their dependencies
      # b) uber-jars with plugins and their dependencies
      # c) directories immediately containing the package directory structure of classes of plugins and their dependencies
      # Note: symlinks will be followed to discover dependencies or plugins.
      # Examples:
      # plugin.path=/usr/local/share/java,/usr/local/share/kafka/plugins,/opt/connectors,
      plugin.path=/plugins
  connector.properties:
    content: |
      name=kafka-connect-lightstreamer
      connector.class=com.lightstreamer.kafka.connect.LightstreamerSinkConnector
      key.converter=org.apache.kafka.connect.storage.StringConverter
      value.converter=org.apache.kafka.connect.storage.StringConverter
      topics=stocks
      max.interval=990

      item.templates=-item-template.stock-template=stock-#{index=KEY}
      topic_mappings=stocks:item-template.stock-template
      field_mappings=field.timestamp:#{VALUE.timestamp},field.time:#{VALUE.time},field.stock_name:#{VALUE.stock_name},field.last_price:#{VALUE.last_price}

      lightstreamer.host=localhost
      lightstreamer.port=6661
