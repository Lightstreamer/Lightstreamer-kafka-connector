plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://packages.confluent.io/maven')
    }

}

dependencies {
    implementation libs.org.apache.logging.log4j.log4j.api
    implementation libs.org.apache.logging.log4j.log4j.core
    implementation libs.org.apache.kafka.kafka.clients
    implementation libs.io.confluent.kafka.json.serializer
    implementation libs.com.fasterxml.jackson.core.jackson.annotations
    implementation libs.org.apache.logging.log4j.log4j.slf4j.impl
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

}

ext {
    appendix = 'all'
}

group = 'com.lightstreamer.examples'
version = '1.0.0'
java.sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Main-Class': "com.lightstreamer.examples.kafkademo.producer.DemoPublisher"
    }
    archiveAppendix = appendix
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/lightstreamer/Lightstreamer-kafka-connector")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId project.name + '-' + appendix
            artifact jar
        }
    }
}
